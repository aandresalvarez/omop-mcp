[project]
name = "omop-mcp"
version = "0.1.0"
description = "OMOP MCP server with PydanticAI agents for concept discovery and SQL generation"
authors = [
    {name = "Alvaro Alvarez", email = "alvaro@example.com"}
]
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}

dependencies = [
    # Core MCP
    "mcp>=1.2.0",

    # PydanticAI & Models
    "pydantic>=2.7",
    "pydantic-ai>=0.0.13",
    "pydantic-settings>=2.2",

    # ATHENA API Client (REQUIRED EXACT VERSION)
    "athena-client==1.0.27",

    # OpenAI for PydanticAI agents
    "openai>=1.50.0",

    # HTTP & Async
    "httpx>=0.27",

    # BigQuery
    "google-cloud-bigquery>=3.25.0",

    # Postgres (future)
    "psycopg[binary,pool]>=3.2",
    "asyncpg>=0.29",

    # Logging & Utilities
    "structlog>=24.1",
    "python-dotenv>=1.0",
    "tenacity>=9.0",

    # OAuth 2.1 / JWT
    "pyjwt[crypto]>=2.9.0",

    # FastMCP
    "starlette>=0.40",
    "uvicorn>=0.30",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0",
    "pytest-asyncio>=0.23",
    "pytest-cov>=5.0",
    "pytest-mock>=3.12",
    "black>=24.0",
    "ruff>=0.6",
    "mypy>=1.10",
    "ipython>=8.0",
    "types-aiofiles",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
omop-mcp = "omop_mcp.server:main"

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.black]
line-length = 100
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.venv
  | __pycache__
)/
'''

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]
ignore = [
    "E501",  # line too long (black handles this)
    "N805",  # first argument should be named 'self' (doesn't apply to Pydantic validators)
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Gradual typing
