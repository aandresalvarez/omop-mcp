name: Quality Checks

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  # ============================================================================
  # Testing
  # ============================================================================
  test:
    name: Tests (Python ${{ matrix.python-version }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11", "3.12"]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          version: "latest"
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Run tests with coverage
        run: |
          source .venv/bin/activate
          pytest --cov=omop_mcp --cov-report=xml --cov-report=term
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        if: matrix.python-version == '3.12'
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  # ============================================================================
  # Code Quality
  # ============================================================================
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Format check
        run: |
          source .venv/bin/activate
          black --check src/ tests/
          ruff format --check src/ tests/
      
      - name: Lint with ruff
        run: |
          source .venv/bin/activate
          ruff check src/ tests/
      
      - name: Lint with pylint
        run: |
          source .venv/bin/activate
          pylint src/omop_mcp --rcfile=.pylintrc || true
        continue-on-error: true

  # ============================================================================
  # Type Checking
  # ============================================================================
  typecheck:
    name: Type Checking
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Type check with mypy
        run: |
          source .venv/bin/activate
          mypy src/
      
      - name: Type check with pyright
        run: |
          source .venv/bin/activate
          pyright src/
        continue-on-error: true

  # ============================================================================
  # Security Scanning
  # ============================================================================
  security:
    name: Security Scanning
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Security scan with bandit
        run: |
          source .venv/bin/activate
          bandit -r src/ -ll -f screen
        continue-on-error: true
      
      - name: Vulnerability scan with pip-audit
        run: |
          source .venv/bin/activate
          pip-audit || true
        continue-on-error: true
      
      - name: Dependency vulnerability scan with safety
        run: |
          source .venv/bin/activate
          safety scan || true
        continue-on-error: true

  # ============================================================================
  # SQL Quality
  # ============================================================================
  sql-quality:
    name: SQL Quality Checks
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Install uv
        uses: astral-sh/setup-uv@v5
      
      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      
      - name: Install dependencies
        run: uv sync --extra dev
      
      - name: Lint SQL with sqlfluff
        run: |
          source .venv/bin/activate
          sqlfluff lint agents/qb/*.sql --dialect bigquery || true
        continue-on-error: true

  # ============================================================================
  # Summary
  # ============================================================================
  quality-summary:
    name: Quality Summary
    runs-on: ubuntu-latest
    needs: [test, lint, typecheck, security, sql-quality]
    if: always()
    
    steps:
      - name: Check results
        run: |
          echo "âœ… Quality checks complete!"
          echo "Test: ${{ needs.test.result }}"
          echo "Lint: ${{ needs.lint.result }}"
          echo "TypeCheck: ${{ needs.typecheck.result }}"
          echo "Security: ${{ needs.security.result }}"
          echo "SQL: ${{ needs.sql-quality.result }}"
